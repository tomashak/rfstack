# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Mona the Octocat'
      home:
        description: 'location'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  robot_test:
    runs-on: ubuntu-latest
    name: Run Robot Framework Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # create folder for test reports
      - name: Create folder for reports
        run: mkdir Results
      - name: Check directories
        run: ls -a
      # run Robot Framework tests inside Docker container
      - name: Run Robot Framework Tests
        # container used here is ppodgorsek/robot-framework:latest
        # see container documentation for usage: https://hub.docker.com/r/ppodgorsek/robot-framework/dockerfile
        # it is required that GitHub repository contains folder "reports". Commit some file inside "reports" to create it
        # place tests in folder tests or change docker run command accordingly
        # configure -e ROBOT_OPTIONS according to yout tests, or remove it if no special configuration is needed
        run: |
            docker run \
              -v ${PWD}/Results:/opt/robotframework/reports:Z \
              -v ${PWD}:/opt/robotframework/tests:Z \
              -e ROBOT_OPTIONS="-i rfstack --loglevel DEBUG" \
              --user $(id -u):$(id -g) \
              ppodgorsek/robot-framework:latest
      # upload test reports as a zip file
      - name: Upload reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Results
          # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
          path: ${{ github.workspace }}/Results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.2
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          files: Results/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false        
